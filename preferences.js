// preferences.js

document.addEventListener('DOMContentLoaded', () => {
    const categoryContainer = document.querySelector('.categories-container');
    const categoryButtons = () => document.querySelectorAll('.categories-container .category-button');
    const motivationText = document.querySelector('.motivation-text p');

    // DÃ©finir les deux ensembles de catÃ©gories
    const initialCategories = [
        "Science",
        "SÃ©curitÃ©",
        "Environnement",
        "Technologie",
        "SantÃ©",
        "Politique",
        "SociÃ©tÃ©",
        "Culture",
        "Ã‰conomie",
        "Sport"
    ];

    const newCategories = [
        "Rap",
        "Pop",
        "RnB",
        "K-Pop",
        "Rock",
        "Jazz",
        "VariÃ©tÃ© FranÃ§aise"
    ];

    // Ã‰tat initial : Ã©tape 1
    let currentStep = 1;

    // Fonction pour gÃ©nÃ©rer les boutons de catÃ©gories
    const generateCategoryButtons = (categories) => {
        categoryContainer.innerHTML = ''; // Vider les catÃ©gories actuelles
        categories.forEach(category => {
            const button = document.createElement('button');
            button.classList.add('category-button');
            button.textContent = category;
            // Ajouter l'Ã©vÃ©nement de sÃ©lection
            button.addEventListener('click', () => {
                button.classList.toggle('selected');
            });
            categoryContainer.appendChild(button);
        });
    };

    // GÃ©nÃ©rer les catÃ©gories initiales
    generateCategoryButtons(initialCategories);

    // Gestion du bouton de validation (check-button)
    const checkButton = document.querySelector('.action-button.check-button');
    if (checkButton) {
        checkButton.addEventListener('click', () => {
            if (currentStep === 1) {
                // Changer le texte de motivation
                motivationText.textContent = "Quâ€™est-ce qui te fait vibrer ? ðŸŽ§";

                // Remplacer les catÃ©gories
                generateCategoryButtons(newCategories);

                // Optionnel : Changer l'icÃ´ne du bouton pour indiquer l'Ã©tape suivante
                checkButton.innerHTML = '<i class="fa fa-arrow-right"></i>';

                // Passer Ã  l'Ã©tape suivante
                currentStep = 2;
            } else if (currentStep === 2) {
                const selectedCategories = Array.from(categoryButtons())
                    .filter(btn => btn.classList.contains('selected'))
                    .map(btn => btn.textContent.trim());

                console.log('CatÃ©gories sÃ©lectionnÃ©es :', selectedCategories);

                // Stocker les catÃ©gories sÃ©lectionnÃ©es (localStorage, backend, etc.)
                // Exemple avec localStorage :
                localStorage.setItem('selectedCategories', JSON.stringify(selectedCategories));

                // Afficher l'overlay avec les messages
                showWelcomeOverlay();
            }
        });
    }

    // Fonction pour afficher l'overlay et les messages sÃ©quentiels
    const showWelcomeOverlay = () => {
        const overlay = document.getElementById('overlay');
        const text1 = document.getElementById('overlay-text1');
        const text2 = document.getElementById('overlay-text2');
        const text3 = document.getElementById('overlay-text3');

        // Afficher l'overlay avec un fade-in
        overlay.classList.add('visible');

        // Afficher le premier texte aprÃ¨s un court dÃ©lai
        setTimeout(() => {
            text1.classList.add('visible');
        }, 500); // DÃ©lai avant l'apparition du premier texte (0.5s)

        // Afficher le second texte aprÃ¨s que le premier soit visible pendant 2s
        setTimeout(() => {
            text2.classList.add('visible');
        }, 2500); // 500ms (fade-in) + 2000ms (affichÃ©)

        // Afficher le troisiÃ¨me texte aprÃ¨s que le second soit visible pendant 2s
        setTimeout(() => {
            text3.classList.add('visible');
        }, 4500); // 500ms + 2000ms + 2000ms

        // Commencer le fade-out des textes aprÃ¨s que le troisiÃ¨me soit visible pendant 2s
        setTimeout(() => {
            text1.classList.remove('visible');
            text1.classList.add('fade-out');

            text2.classList.remove('visible');
            text2.classList.add('fade-out');

            text3.classList.remove('visible');
            text3.classList.add('fade-out');
        }, 6500); // 500ms + 2000ms + 2000ms + 2000ms

        // Rediriger aprÃ¨s que les textes aient disparu plus un petit dÃ©lai
        setTimeout(() => {
            window.location.href = 'index.html';
        }, 8000); // 500ms + 2000ms + 2000ms + 2000ms + 500ms
    };
});
